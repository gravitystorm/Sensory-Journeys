<h1>Viewing trace <%= @trace.id %></h1>

<script type="text/javascript">
  <!--
  function init(){
    var centre = lonLatToMercator( new OpenLayers.LonLat(0, 53.8));
    var zoom = 6;
    var map = createMap("map", centre, zoom);
    // OpenLayers.Bounds(min_lon, min_lat, max_lon, max_lat);
    var bbox = new OpenLayers.Bounds(<%= @trace.min_lon %>, <%= @trace.min_lat %>, <%= @trace.max_lon %>, <%= @trace.max_lat %>);
    setMapExtent(bbox);
    map.addLayer(new OpenLayers.Layer.GML("KML", "/trace/kml/<%= @trace.id%>", 
        {
        format: OpenLayers.Format.KML, 
        projection: map.displayProjection,
        formatOptions: {
          extractStyles: false, 
          extractAttributes: true,
          maxDepth: 2
        }
        }));
    var SHADOW_Z_INDEX = 9;
    var MARKER_Z_INDEX = 10;

    var vectors = new OpenLayers.Layer.Vector("Vector Layer", 
                    { styleMap: new OpenLayers.StyleMap({
                        // Set the external graphic and background graphic images.
                        externalGraphic: "/openlayers/img/marker-gold.png",
                        backgroundGraphic: "/images/marker_shadow.png",
                        
                        // Makes sure the background graphic is placed correctly relative
                        // to the external graphic.
                        backgroundXOffset: 0,
                        backgroundYOffset: -7,
                        
                        // Set the z-indexes of both graphics to make sure the background
                        // graphics stay in the background (shadows on top of markers looks
                        // odd; let's not do that).
                        graphicZIndex: MARKER_Z_INDEX,
                        backgroundGraphicZIndex: SHADOW_Z_INDEX,
                        
                        pointRadius: 10
                        }),
                      projection: new OpenLayers.Projection("EPSG:4326")
                    }
              );
    map.addLayer(vectors);

    var markers = new OpenLayers.Layer.Vector("markers",
                    { protocol: new OpenLayers.Protocol.HTTP({
                        url: '/marker/all',
                        format: new OpenLayers.Format.KML({extractStyles: false, extractAttributes: true})
                      }),
                      strategies: [new OpenLayers.Strategy.Fixed()],
                      projection: new OpenLayers.Projection("EPSG:4326")
                    });
    map.addLayer(markers);

    var selector = new OpenLayers.Control.SelectFeature(markers, 
                        { onSelect: createPopup,
                          onUnselect : destroyPopup 
                        });
    map.addControl(selector);
    selector.activate();
    
    function createPopup(feature) {
      feature.popup = new OpenLayers.Popup.FramedCloud("pop",
          feature.geometry.getBounds().getCenterLonLat(),
          null,
          '<i>'+feature.attributes.description+'</i>',
          null,
          true,
          function() { selector.unselectAll(); }
      );
      map.addPopup(feature.popup);
    }

    function destroyPopup(feature) {
      feature.popup.destroy();
      feature.popup = null;
    }

    controls = {
        point: new OpenLayers.Control.DrawFeature(vectors,
                    OpenLayers.Handler.Point, {'featureAdded': onCompleteAdd}),
        drag: new OpenLayers.Control.DragFeature(vectors, {'onComplete': onCompleteMove})
        //modify: new OpenLayers.Control.ModifyFeature(vectors)
    };

    for(var key in controls) {
        map.addControl(controls[key]);
    }

  }

  function addMarker() {
    controls['point'].activate();
    $('tClick').style.display = 'none';
    $('tMap').style.display = 'block';
  }  
  
  function onCompleteAdd(feature) {
    controls['drag'].activate();
    controls['point'].deactivate();
    if(feature) {
      geo = feature.geometry.clone();
      geo.transform(map.getProjectionObject(), map.displayProjection)
      $('lat').value = geo.y
      $('lon').value = geo.x
    }
    $('tMap').style.display = 'none';
    $('tMarker').style.display = 'block';
  }
  
  function onCompleteMove(feature) {
    if(feature) {
      geo = feature.geometry.clone();
      geo.transform(map.getProjectionObject(), map.displayProjection)
      $('lat').value = geo.y
      $('lon').value = geo.x
    }
  }
  // -->
</script>
Original filename: <%= @trace.file_name %><br />
<div id="map"></div>
<div id="sidebar">
  <%= link_to "Upload Another", :action => :upload %><br/><br />
  <span onclick="addMarker();" id="tClick">Click here to add marker</span>
  <span id="tMap" style="display:none">Now click on the map</span>
  <span id="tMarker" style="display:none">Move marker or press save</span>
  <% form_tag ({:controller=> 'marker', :action => 'save'}, {:id => 'marker_form'}) do %>
    <%= text_field_tag 'lat' %>
    <%= text_field_tag 'lon' %>
    <%= text_field_tag 'text' %>
    <%= text_field_tag 'emotion', 'happy' %>
    <%= submit_tag 'save' %>
  <% end %>
</div>
