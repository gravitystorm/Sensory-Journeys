<table>
  <tr>
    <td class="navtab">
      <% unless @modes.length == 0 %>
        <%= render :partial => 'tabnav', :locals => {:mode => @mode, :modes => @modes} %>
      <% end %>
    </td>
    <td>
      <div class="iconlink"><%= link_to image_tag("about.png", :alt => 'About')+'About this project', {:controller => :site, :action => :about}, :rel => :facebox %></div>
    </td>
    <td>
      <div class="iconlink"><%= link_to image_tag("logout.png", :alt => 'Logout')+'Log out', :controller => :site, :action => :logout %></div>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--

  function post_init() {
    <% if @overlay_url %>
      var overlay = new OpenLayers.Layer.OSM("Scan",
                                        ["<%= @overlay_url %>"],
                                        { displayOutsideMaxExtent: true,
                                          transitionEffect: 'resize', isBaseLayer: false});
      map.addLayer(overlay);
    <% end %>
    <% if @wpprint %>
      var bbox = new OpenLayers.Bounds(<%= @wpprint.west %>, <%= @wpprint.south %>, <%= @wpprint.east %>, <%= @wpprint.north %>);
      setMapExtent(bbox);
    <% end %>
    <% if @scans %>
      <% @scans.each do |scan| %>
      var overlay = new OpenLayers.Layer.OSM("My Scans",
                                        ["<%= (WP_URL+'files/scans/'+scan.scan_id+'/${z}/${x}/${y}.png') %>"],
                                        { displayOutsideMaxExtent: true,
                                          transitionEffect: 'resize', isBaseLayer: false});
      map.addLayer(overlay);
      <% end %>
    <% end %>
    <% if @alias_scans %>
      <% @alias_scans.each do |scan| %>
      var overlay = new OpenLayers.Layer.OSM("Alias Scans",
                                        ["<%= (WP_URL+'files/scans/'+scan.scan_id+'/${z}/${x}/${y}.png') %>"],
                                        { displayOutsideMaxExtent: true,
                                          transitionEffect: 'resize', isBaseLayer: false});
      map.addLayer(overlay);
      <% end %>
    <% end %>
    <% if @showtrace %>
      var bbox = new OpenLayers.Bounds(<%= @trace.min_lon %>, <%= @trace.min_lat %>, <%= @trace.max_lon %>, <%= @trace.max_lat %>);
      setMapExtent(bbox);
      var trace = new OpenLayers.Layer.Vector("Trace <%= @trace.id %>",
                    { protocol: new OpenLayers.Protocol.HTTP({
                                    url: "/trace/kml/<%= @trace.id %>.kml",
                                    format: new OpenLayers.Format.KML({extractStyles: false, extractAttributes: true})
                                    }),
                      strategies: [new OpenLayers.Strategy.Fixed()],
                      projection: new OpenLayers.Projection("EPSG:4326"),
                      styleMap: new OpenLayers.StyleMap({strokeWidth: 4, strokeColor: '#0000ff', strokeOpacity: 0.4, pointRadius: 5, fillColor: '#ff00ff', fillOpacity: 0.4}),
                    });
      map.addLayer(trace);
    <% end %>
    var traces = new OpenLayers.Layer.Vector("My GPS traces",
                    { protocol: new OpenLayers.Protocol.HTTP({
                                    url: "/trace/traces.kml?<%= @trace_url_params %>",
                                    format: new OpenLayers.Format.KML({extractStyles: false, extractAttributes: true})
                                    }),
                      strategies: [new OpenLayers.Strategy.BBOX()],
                      projection: new OpenLayers.Projection("EPSG:4326"),
                      styleMap: new OpenLayers.StyleMap({strokeWidth: 4, strokeColor: '#0000ff', strokeOpacity: 0.4, pointRadius: 5, fillColor: '#ff00ff', fillOpacity: 0.4}),
                      minScale: 100000
                    });
    map.addLayer(traces);
    map.addLayer(newmarkers);
    map.addLayer(markers);

    for(var key in controls) {
        map.addControl(controls[key]);
    }
    controls['selector'].activate();
    // refresh the map so that it fetches the layers.
    map.setCenter(map.getCenter());
    
    map.events.register("moveend", map, updatePrintLinks);
    updatePrintLinks();
    

  }
  
  var printBox = new OpenLayers.Bounds();
  var printBoxLayer = new OpenLayers.Layer.Vector("printbox", {projection: new OpenLayers.Projection("EPSG:4326")});
 
  function updatePrintLinks() {
    center = map.getCenter().clone();
    center.transform(map.getProjectionObject(), map.displayProjection);
    centerpx = map.getViewPortPxFromLonLat(map.getCenter());
    // These magic numbers are what Walking Paper uses to size the preview
    // when making the map, hardcoded for landscape a4. Who knows how it 
    // actually works.
    tl = new OpenLayers.Pixel(centerpx.x-240, centerpx.y-151);
    br = new OpenLayers.Pixel(centerpx.x+240, centerpx.y+151);
    nw = map.getLonLatFromPixel(tl);
    se = map.getLonLatFromPixel(br);
    printBox = new OpenLayers.Bounds(nw.lon, se.lat, se.lon, nw.lat);
    printBoxBox = new OpenLayers.Feature.Vector(printBox.toGeometry());
    printBoxLayer.destroyFeatures();
    printBoxLayer.addFeatures(printBoxBox);
    nw.transform(map.getProjectionObject(), map.displayProjection);
    se.transform(map.getProjectionObject(), map.displayProjection);
    $('north').value = nw.lat;
    $('west').value = nw.lon;
    $('south').value = se.lat;
    $('east').value = se.lon;
    $('zoom').value = map.getZoom();
  }
  
  function showMarkerDialog() {
    $('sidebar-menu').hide();
    $('marker_form').hide();
    $('sidebar-marker').show();
    addMarker();
  }
  
  function showPrintDialog() {
    $('sidebar-menu').hide();
    $('sidebar-print').show();
    map.addLayer(printBoxLayer);
  }
  
  function onMarkerSubmit() {
    $('marker_save').disable();
    $('marker_save').value = 'Saving...';
  }
  
  function onTraceSubmit() {
    $('trace_save').disable();
    $('trace_save').value = 'Uploading ...';
  }
  
  function onMarkerCancel() {
    //this could rearrange the boxes, but addMarker() assumes no in-progress markers
    window.location.assign("<%= url_for :action => :edit, :only_path => false %>");
  }

  function onPrintCancel() {
    window.location.assign("<%= url_for :action => :edit, :only_path => false %>");
  }
  // -->
</script>

<div>
  <div id="map"></div>
  <div id="sidebar">
  
    <div id="sidebar-menu" class="sidebarbox">
      <a href="#" onclick="showMarkerDialog()" class="sidebarlink"><%= image_tag 'marker.png' %>Add Marker</a><br />
      <%= link_to (image_tag 'gps.png')+'Upload GPS Track', {:controller => :trace, :action => :upload}, :rel => :facebox, :class => :sidebarlink %><br />
      <%= link_to (image_tag 'sketchupload.png')+'Upload Sketch Map', WP_URL + 'upload.php', :class => :sidebarlink %><br />
      <a href="#" onclick="showPrintDialog()" class="sidebarlink"><%= image_tag 'print.png' %>Print Map</a><br />
    </div>
    
    <div id="sidebar-marker" class="sidebarbox" style="display:none">
      <span id="tMap" style="">Click on the map where you want to place a marker</span>
      <span id="tMarker" style="display:none"></span>
      <% form_tag({:controller=> 'marker', :action => 'save'}, {:id => 'marker_form', :onsubmit => 'onMarkerSubmit();'}) do %>
        <%= hidden_field_tag 'lat' %>
        <%= hidden_field_tag 'lon' %>
        <p>1. How was the experience?</p>
        <% @emotions.each do |emotion| %>
          <%= radio_button_tag 'emotion', emotion.id %>
          <%= label_tag "emotion_#{emotion.id}", image_tag(emotion.icon)+" "+emotion.text %><br />
        <% end %>
        <p>2. Enter a text description</p>
        <%= text_area_tag 'text', nil, :rows => 8 %>
        <%= submit_tag 'Save', :id => :marker_save %><span style="float:right"><%= submit_tag 'Cancel', :id => :marker_cancel, :onClick => 'onMarkerCancel();return false;' %></span>
      <% end %>
    </div>
    
    <div id="sidebar-print" class="sidebarbox" style="display:none">
      <p>Print the section of the map that's highlighted.</p>
      <% form_tag(WP_URL + 'compose.php', {:id => 'wp_form'}) do %>
        <%= hidden_field_tag 'north', '51' %>
        <%= hidden_field_tag 'south', '51' %>
        <%= hidden_field_tag 'east', '-1' %>
        <%= hidden_field_tag 'west', '-1' %>
        <%= hidden_field_tag 'zoom', '16' %>
        <%= hidden_field_tag 'provider', 'http://tile.openstreetmap.org/{Z}/{X}/{Y}.png' %>
        <%= hidden_field_tag 'paper', 'landscape-a4' %>
        <%= submit_tag 'Print' %><span style="float:right"><%= submit_tag 'Cancel', :id => :print_cancel, :onClick => 'onPrintCancel();return false;' %></span>
      <% end %>
    </div>
    
    <div id="sidebar-stats" class="sidebarbox">
      <p>You've saved <%= @user.markers.count %> <%= @user.markers.count == 1 ? 'marker' : 'markers' %>,
      <%= @user.shadow_scans.count %> <%= @user.shadow_scans.count == 1 ? 'scan' : 'scans' %>
      and <%= @user.traces.count %> GPS <%= @user.traces.count == 1 ? 'trace' : 'traces' %></p>
    </div>
    
    <% if session[:alias] -%>
    <div id="sidebar-hello" class="sidebarbox">
      <p>Welcome, <%=h session[:alias] %></p>
      <p>You have already got <%= @alias_scans_count %> <%= @alias_scans_count == 1 ? 'scan' : 'scans' %>
      and <%= @alias_traces_count %> GPS <%= @alias_traces_count == 1 ? 'trace' : 'traces' %>
    </div>
    <% end -%>
    
    <div id="sidebar-alias" class="sidebarbox">
      <p>Enter alias to load scans and tracks:</p>
      <% form_tag({:action => 'fetchalias'}, {:id => 'aliasform'}) do %>
        <p><%= text_field_tag 'alias' %><%= submit_tag 'Go!', :id => :alias_go %></p>
      <% end %>
  </div>
</div>